spring.application.name=reservation-service
server.port=9090

# ========================
# Eureka Client Configuration
# ========================
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.instance.preferIpAddress=true
eureka.instance.instanceId=${spring.application.name}:${random.value}
eureka.client.registry-fetch-interval-seconds=5
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=15

# Health Check (Critical for Eureka)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.db.enabled=true

# ========================
# Database Configuration
# ========================
spring.datasource.url=jdbc:mysql://localhost:3306/reservation_db?useSSL=false&serverTimezone=UTC&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# ========================
# JPA/Hibernate Configuration
# ========================
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ========================
# Logging (For Debugging)
# ========================
logging.level.com.netflix.eureka=INFO
logging.level.com.netflix.discovery=INFO
logging.level.org.springframework.cloud=DEBUG

# Enable CORS globally
management.endpoints.web.cors.allowed-origins=http://localhost:4200
management.endpoints.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS


# Ticket service CB
resilience4j.circuitbreaker.instances.ticketServiceCB.slidingWindowSize=5
resilience4j.circuitbreaker.instances.ticketServiceCB.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.ticketServiceCB.failureRateThreshold=50
resilience4j.circuitbreaker.instances.ticketServiceCB.waitDurationInOpenState=10s
