server.port=8079
spring.application.name=api-gateway
spring.main.web-application-type=reactive

# Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.preferIpAddress=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Gateway Discovery
spring.cloud.gateway.discovery.locator.enabled=true

# Routes
spring.cloud.gateway.routes[0].id=reservation-service
spring.cloud.gateway.routes[0].uri=lb://reservation-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/reservation/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=reservationServiceCircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/reservationServiceFallback

spring.cloud.gateway.routes[1].id=ticket-service
spring.cloud.gateway.routes[1].uri=lb://ticket-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/tickets/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=ticketServiceCircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/ticketServiceFallback

# Resilience4j
resilience4j.circuitbreaker.instances.ticketServiceCircuitBreaker.slidingWindowSize=5
resilience4j.circuitbreaker.instances.ticketServiceCircuitBreaker.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.ticketServiceCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.ticketServiceCircuitBreaker.waitDurationInOpenState=10s

resilience4j.circuitbreaker.instances.reservationServiceCircuitBreaker.slidingWindowSize=5
resilience4j.circuitbreaker.instances.reservationServiceCircuitBreaker.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.reservationServiceCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.reservationServiceCircuitBreaker.waitDurationInOpenState=10s

